# Generated by Django 5.2 on 2025-04-21 18:39

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=200)),
                ('calories', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('protein', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('carbs', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('fats', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('fiber', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('sugar', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('water', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('sodium', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('calcium', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('iron', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('potassium', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('cholesterol', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'db_table': 'food',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('instructions', models.TextField()),
                ('prep_time', models.IntegerField()),
                ('cook_time', models.IntegerField()),
                ('servings', models.IntegerField()),
            ],
            options={
                'db_table': 'recipe',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Food_Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foodTracker.food')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'food_log',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Recipe_Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.CharField(max_length=100)),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foodTracker.food')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='foodTracker.recipe')),
            ],
            options={
                'db_table': 'recipe_ingredient',
                'ordering': ['recipe'],
            },
        ),
    ]
